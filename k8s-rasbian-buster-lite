1. install minimal raspbian for rasberry pi 4 from any of the mirrors 

2. Login (raspbian default login username: pi, password: raspberry. Change the password # sudo raspi-config)

3. Connect to WIFI 
if network manager is not configured on raspbian, enter the command #sudo raspi-config and go to Advanced Options >> Network Config and set the Network Manager as the Network configuration tool

using nmcli (https://nullr0ute.com/2016/09/connect-to-a-wireless-network-using-command-line-nmcli/)
# nmcli device wifi rescan
# nmcli device wifi list
# nmcli device wifi connect <SSID-Name> password <wireless-password>

 
4. Enable SSH
# sudo systemctl enable ssh
# sudo systemctl start ssh

5. Configure Host
We will give our device a static ip so it keeps the ip between reboots.
cat >> /etc/dhcpcd.conf
Find your device IP. It will be in the form of x.x.x.x. You can find your device ip (on a mac) using ifconfig | grep inet . My mac ip was 192.168.0.26 so my ip format is like 192.168.0.x .
Paste the following code block
interface eth0
static ip_address=x.x.x.y/24
static routers=x.x.x.1
static domain_name_servers=8.8.8.8
Where x.x.x is same as your device ip and y is the ip you want and reboot the machine

6. Install Docker
# curl -sSL get.docker.com | sh && \
  sudo usermod pi -aG docker && \
  newgrp docker


7. Disable SWAP
First set CONF_SWAPSIZE=0 in /etc/dphys-swapfile

# sudo dphys-swapfile swapoff && \
  sudo dphys-swapfile uninstall && \
  sudo update-rc.d dphys-swapfile remove

Following should return empty to verfiy swap is disabled
# sudo swapon --summary 

8. Edit the /boot/cmdline.txt file. Add the following in the end of the file. This needs to be in the same line as all the other text in the file. Do not create a new file.
# cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory

Reboot the system

9. Installing k8s

Create the following file: /etc/apt/sources.list.d/kubernetes.list and add the following in the file

deb http://apt.kubernetes.io/ kubernetes-xenial main

Execute the following as root:

# curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

# sudo apt-get update

# sudo apt-get install -y kubelet kubeadm kubectl

On Master Node:

The following will take about 15 min to complete.
# sudo kubeadm init --token-ttl=0 --pod-network-cidr=10.244.0.0/16

Above command will produce output similar to the following to be run on worker nodes to join the cluster(this is not required on a single node cluster:
# kubeadm join <master-ip>:6443 --token <token> \
    --discovery-token-ca-cert-hash sha256:<hash>

Incase you lose this line or canâ€™t find in the terminal, you can find the token in the following way. kubeadm token list will show you all available token. From there you can find the token. Finding the sha hash is a bit trickier. But you can get it by
openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //' 
This long and convoluted command gets the sha256 for the certificate.

Finally run the following as normal user, not as root:

# mkdir -p $HOME/.kube
# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
# sudo chown $(id -u):$(id -g) $HOME/.kube/config

10. Install network driver (Flannel). Weave may not work on raspberrypi

# sudo sysctl net.bridge.bridge-nf-call-iptables=1
# kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

11. To run pods on pods on master in a single node cluster setup, remove the taint:

# kubectl taint nodes --all node-role.kubernetes.io/control-plane:NoSchedule-


Troubleshooting Guide:
1) Getting the following error during kubeadm init
   [ERROR FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml]: /etc/kubernetes/manifests/kube-apiserver.yaml already exists
   Fix: First run the kubeadm reset before executing the kubeadm init command
2) Gettung following errors during kubeadm reset
   a) port 10251 and 10252 are in use
      Fix: check the usage status of all ports. It seems like kubeadm failed to reset the controller and scheduler. (https://github.com/kubernetes/kubeadm/issues/339)

       $ netstat -lnp | grep 1025
       tcp6       0      0 :::10251                :::*                    LISTEN      4366/kube-scheduler
       tcp6       0      0 :::10252                :::*                    LISTEN      4353/kube-controlle
       $ kill 4366
       $ kill 4353
   b) [ERROR CRI]: container runtime is not running: 
      Fix: (Source: https://www.reddit.com/r/kubernetes/comments/utiymt/kubeadm_init_running_into_issue_error_cri/)
       $ sudo rm /etc/containerd/config.toml
       $ sudo systemctl restart containerd
       $ sudo kubeadm init

       https://github.com/containerd/containerd/issues/4581
